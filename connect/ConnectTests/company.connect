<?xml version="1.1" encoding="UTF-8" standalone="yes"?>
<application xmlns="http://wadl.dev.java.net/2009/02"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:connect="http://www.mobilegridinc.com/schemas/connect/v1">
    
    <grammars>
        <doc title="description">
            This is the description of the grammers.
        </doc>
    </grammars>
    
    <resources base="http://api-staging.mobilegridinc.com/connect/">
        <resource path="login">
            <method name="POST" id="GetToken">
                <request>
                    <representation mediaType="application/x-www-form-urlencoded">
                        <param name="grant_type" style="query" fixed="client_credentials"/>
                        <param name="client_id" style="query" fixed="1YV1vIZIFUlZYgd2LeZTg"/>
                        <param name="client_secret" style="query" fixed="xxxxxxxxxxxxxxxxxxx"/>
                        <param name="scope" style="query" fixed="http://api.microsofttranslator.com"/>
                    </representation>
                </request>
                <!--<response siena:resultform="aggregate">-->
                <!--<representation mediaType="application/json">-->
                <!--<param style="plain" name="access_token" path="/access_token"/>-->
                <!--<param style="plain" name="expires_in" path="/expires_in"/>-->
                <!--</representation>-->
                <!--</response>-->
            </method>
        </resource>
    </resources>
    
    <resources base="http://api-staging.mobilegridinc.com/connect/test">
        
        <!-- Company Container -->
        <!-- Company Entity @ path "/companies" -->
        <resource path="/companies" id="companyResource">
            <!--
             There are 2 things available during a call, the object/Entity
             and the Service (Resource) environment which may include
             the Authorization variable.
             -->
            <param style="header" name="X-API-VERSION" type="xs:string" fixed="3.0" required="true"/>
            <param style="header" name="Accept" type="xs:string" required="true" fixed="application/json"/>
            <param style="header" name="Authorization" type="xs:string" required="true"/>
            <!--            <param style="matrix" name="view" type="xs:string" fixed="detail"/>-->
            
            <!-- List -->
            <method name="GET" id="listCompanies">
                <response status="200" connect:responseType="container" connect:containerRootPath="/resources">
                    <representation href="#companyResponseRepresentation"/>
                </response>
                <connect:authentication required="true"/>
            </method>
            
            <!-- Create -->
            <method name="POST" id="insertCompany">
                <request>
                    <representation mediaType="application/json">
                        <param style="plain" name="ein" type="xs:double" required="false" path="/ein"/>
                        <param style="plain" name="name" type="xs:string" required="true" path="/name"/>
                    </representation>
                </request>
                
                <!-- Created -->
                <response status="201">
                    <!-- POST will return the location header with the id of the object -->
                    <param name="Location" type="xs:string" style="header" required="true" path="/uid"/>
                    <representation mediaType="*/*"/>
                </response>
                <connect:authentication required="true"/>
            </method>
            
            <!-- Company Entity -->
            <!-- "/companies/{company_uid}" -->
            <resource path="/{company_uid}">
                
                <!-- The unique identifier of this object. -->
                <param type="xs:string" style="template" name="company_uid" path="/company_uid"/>
                
                <!-- Read -->
                <method name="GET" id="readCompany" connect:responseType="resource">
                    <response status="200">
                        <representation href="#companyResponseRepresentation"/>
                    </response>
                    <connect:authentication required="true"/>
                </method>
                
                <!-- Update -->
                <method name="PUT" id="updateCompany">
                    <request> <representation mediaType="*/*"/> </request>
                    <!-- Success: 204 No Content -->
                    <response status="204"/>
                    <connect:authentication required="true"/>
                </method>
                
                <!-- Delete -->
                <method name="DELETE" id="deleteCompany">
                    <!-- Success: 204 No Content -->
                    <response status="204"/>
                    <connect:authentication required="true"/>
                </method>
                
                <!-- Departments Container -->
                <!-- Department Entity @ path "/companies/{company_uid}/departments" -->
                <resource path="/departments">
                    
                    <!-- List -->
                    <method name="GET" id="listDepartments">
                        <!-- Success: 200 OK -->
                        <response status="200"  connect:responseType="container" connect:containerRootPath="/resources">
                            <representation href="#departmentResponseRepresentation"/>
                        </response>
                        <connect:authentication required="true"/>
                    </method>
                    
                    <!-- Create -->
                    <method name="POST" id="insertDepartment">
                        <doc>  Creates a new department.  </doc>
                        <request> <representation mediaType="*/*"/> </request>
                        <response> <representation mediaType="*/*"/> </response>
                        <connect:authentication required="true"/>
                    </method>
                    
                    <!-- Department Entity -->
                    <!-- "/companies/{company_uid}/departments/{department_uid}" -->
                    <resource path="/{department_uid}">
                        <!-- The unique identifier of this object. -->
                        <param type="xs:string" style="template" name="department_uid" path="/department_uid"/>
                        
                        <!-- Read -->
                        <method name="GET" id="readDepartment">
                            <!-- Success: 200 OK -->
                            <response status="200" connect:responseType="resource">
                                <representation href="#departmentResponseRepresentation"/>
                            </response>
                            <connect:authentication required="true"/>
                        </method>
                        
                        <!-- Update -->
                        <method name="PUT" id="updateDepartment">
                            <request> <representation mediaType="*/*"/> </request>
                            <response> <representation mediaType="*/*"/> </response>
                            <connect:authentication required="true"/>
                        </method>
                        
                        <!-- Delete -->
                        <method name="DELETE" id="deleteDepartment">
                            <!-- Success: 204 No Content -->
                            <response status="204"/>
                            <connect:authentication required="true"/>
                        </method>
                    </resource>
                    
                </resource>
                
                <!-- Employee Container -->
                <!-- Employee Entity @ path "/companies/{company_uid}/employees" -->
                <resource path="/employees">
                    
                    <!-- List -->
                    <method name="GET" id="listEmployees">
                        <!-- Success: 200 OK -->
                        <response status="200"  connect:responseType="container" connect:containerRootPath="/resources">
                            <representation href="#employeeResponseRepresentation"/>
                        </response>
                        <connect:authentication required="true"/>
                    </method>
                    
                    <!-- Create -->
                    <method name="POST" id="insertEmployee">
                        <request> <representation mediaType="*/*"/> </request>
                        
                        <!-- Success: 204 No Content -->
                        <response status="204"/>
                        <connect:authentication required="true"/>
                    </method>
                    
                    <!-- Department Entity -->
                    <!-- "/companies/{company_uid}/employees/{employee_uid}" -->
                    <resource path="/{employee_uid}">
                        <!-- The unique identifier of this object. -->
                        <param type="xs:string" style="template" name="employee_uid" path="/employee_uid"/>
                        <!-- Read -->
                        <method name="GET" id="readEmployee" connect:responseType="resource">
                            <!-- Success: 200 OK -->
                            <response status="200">
                                <representation href="#employeeResponseRepresentation"/>
                            </response>
                            <connect:authentication required="true"/>
                        </method>
                        
                        <!-- Update -->
                        <method name="PUT" id="updateEmployee">
                            <request> <representation mediaType="*/*"/> </request>
                            <!-- Success: 204 No Content -->
                            <response status="204"/>
                            <connect:authentication required="true"/>
                        </method>
                        
                        <!-- Delete -->
                        <method name="DELETE" id="deleteEmployee">
                            <!-- Success: 204 No Content -->
                            <response status="204"/>
                            <connect:authentication required="true"/>
                        </method>
                    </resource>
                    
                </resource>
                
            </resource>
            
        </resource>
        
    </resources>
    
    <!-- Representations are used for mapping the entity type to the payload of the
     request/response items.
     -->
    <!-- Collections allow multiple instances of single representations or elements
     
     Example 1 JSON:
     
     {
     "count":2,
     "resources":[
     {
     "uid":1,
     "ein":"11-1111111",
     "name":"Company 1"
     },
     {
     "uid":2,
     "ein":"22-2222222",
     "name":"Company 2"
     }
     ]
     }
     
     <connect:collection path="/resources" type="ARRAY">
     <representation href="companyResponseRepresentation"/>
     </connect:collection>
     
     Example 2 JSON:
     
     [
     {
     "uid":1,
     "ein":"11-1111111",
     "name":"Company 1"
     },
     {
     "uid":2,
     "ein":"22-2222222",
     "name":"Company 2"
     }
     ]
     
     <connect:collection path="/" type="ARRAY">
     <representation href="companyResponseRepresentation"/>
     </connect:collection>
     
     -->
    <representation mediaType="application/json" id="companyListRepresentation">
        <connect:collection path="/resources" type="ARRAY">
            <representation href="companyRepresentation"/>
        </connect:collection>
    </representation>
    
    <representation mediaType="application/json" id="companyRepresentation">
        <param style="plain" name="company_uid" type="xs:double" required="true" path="/company_uid"/>
        <param style="plain" name="ein" type="xs:string" required="true" path="/ein"/>
        <param style="plain" name="name" type="xs:string" required="true" path="/name"/>
    </representation>
    
    <representation mediaType="application/json" id="departmentListRepresentation">
        <connect:collection path="/resources" type="ARRAY">
            <representation href="departmentRepresentation"/>
        </connect:collection>
    </representation>
    
    <representation mediaType="application/json" id="departmentRepresentation">
        <param style="plain" name="department_uid" type="xs:double" required="true" path="/department_uid"/>
        <param style="plain" name="company_uid" type="xs:double" required="true" path="/company_uid"/>
        <param style="plain" name="name" type="xs:string" required="true" path="/name"/>
    </representation>
    
    <representation mediaType="application/json" id="employeeListRepresentation">
        <connect:collection path="/resources" type="ARRAY">
            <representation href="employeeRepresentation"/>
        </connect:collection>
    </representation>
    
    <!-- The name portion of a param specifies the local attribute name in
     for the local object while the path specifies the path to place or
     retrieve the value for the attribute.  Deep introspection is possible.
     
     Example JSON for Employee:
     
     {
     "employee_uid":1,
     "company_uid":1,
     "department_uid":1,
     "employeeNumber":100,
     "name":{
     "first":"John",
     "last":"Doe"
     },
     "salary":120000.00
     }
     
     -->
    <representation mediaType="application/json" id="employeeRepresentation">
        <param style="plain" name="employee_uid" type="xs:double" required="true" path="/employee_uiduid"/>
        <param style="plain" name="company_uid" type="xs:double" required="true" path="/company_uid"/>
        <param style="plain" name="department_uid" type="xs:double" required="true" path="/department_uid"/>
        <param style="plain" name="employeeNumber" type="xs:string" required="true" path="/employeeNumber"/>
        <param style="plain" name="first" type="xs:string" required="true" path="/name/first"/>
        <param style="plain" name="last" type="xs:string" required="true" path="/name/last"/>
        <param style="plain" name="salary" type="xs:float" required="false" path="/salary"/>
    </representation>
    
    
    <!-- Specific Entity to Action mapping -->
    <connect:model versionHash="A87BE3456" userVersion="1.0">
        <connect:entity name="Company">
            
            <connect:action type="LIST"   method="#listCompanies"/>
            <connect:action type="READ"   method="#readCompanies"/>
            <connect:action type="INSERT" method="#insertCompanies"/>
            <connect:action type="UPDATE" method="#updateCompanies"/>
            <connect:action type="DELETE" method="#deleteCompanies"/>
            
            <connect:relationship name="employees" targetEntity="Employee">
                <connect:action type="LIST"   method="#listCompanyEmployees"/>
                <connect:action type="READ"   method="#readCompanyEmployee"/>
            </connect:relationship>
            
            <connect:relationship name="departments" targetEntity="Department">
                <connect:action type="LIST"   method="#listCompanyDepartments"/>
                <connect:action type="READ"   method="#readCompanyDepartment"/>
            </connect:relationship>
        </connect:entity>
        
        <connect:entity name="Employee">
            <connect:relationship name="company" targetEntity="Company"/>
            <connect:relationship name="department" targetEntity="Department"/>
        </connect:entity>
        
        <connect:entity name="Department">
            <connect:relationship name="employees" targetEntity="Employee"/>
            <connect:relationship name="company" targetEntity="Company"/>
        </connect:entity>
    </connect:model>
    
</application>